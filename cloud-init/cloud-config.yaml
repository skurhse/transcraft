#cloud-config
users:
  - default
  - name: prometheus
    shell: /bin/false
  - name: node_exporter
    shell: /bin/false
  - name: minecraft-exporter
    shell: /bin/false

package_update: true

packages:
  - apt-transport-https
  - curl
  - fail2ban
  - openjdk-17-jre-headless
  - ca-certificates

write_files:
  - path: /etc/sysctl.d/enabled_ipv4_forwarding.conf
    content: |
      net.ipv4.conf.all.forwarding=1

  - path: /tmp/server.properties
    content: |
      level-seed=stackitminecraftrocks
      view-distance=10
      enable-jmx-monitoring=false
      server-ip=
      resource-pack-prompt=
      gamemode=survival
      allow-nether=true
      enable-command-block=false
      sync-chunk-writes=true
      enable-query=false
      op-permission-level=4
      prevent-proxy-connections=false
      resource-pack=
      entity-broadcast-range-percentage=100
      level-name=world
      player-idle-timeout=0
      motd=\u00A7bAzure \u00A7rMinecraft --- \u00A76PaperMC \u00A7redition
      query.port=25565
      force-gamemode=false
      rate-limit=0
      hardcore=false
      white-list=false
      broadcast-console-to-ops=true
      pvp=true
      spawn-npcs=true
      spawn-animals=true
      snooper-enabled=true
      difficulty=easy
      function-permission-level=2
      network-compression-threshold=256
      text-filtering-config=
      require-resource-pack=false
      spawn-monsters=true
      max-tick-time=60000
      enforce-whitelist=false
      use-native-transport=true
      max-players=100
      resource-pack-sha1=
      spawn-protection=16
      online-mode=true
      enable-status=true
      allow-flight=false
      max-world-size=
      broadcast-rcon-to-ops=true
      rcon.port=25575
      enable-rcon=true
      rcon.password=test
      server-port=25565

  - path: /tmp/prometheus.yml
    content: |
      global:
        scrape_interval: 15s

      scrape_configs:
        - job_name: 'prometheus'
          scrape_interval: 5s
          static_configs:
            - targets: ['localhost:9090']
        - job_name: 'node_exporter'
          scrape_interval: 5s
          static_configs:
            - targets: ['localhost:9100']
        - job_name: 'minecraft_exporter'
          scrape_interval: 1m
          static_configs:
            - targets: ['localhost:9150']

  - path: /etc/systemd/system/prometheus.service
    content: |
      [Unit]
      Description=Prometheus
      Wants=network-online.target
      After=network-online.target
      [Service]
      User=prometheus
      Group=prometheus
      Type=simple
      ExecStart=/usr/local/bin/prometheus \
          --config.file /etc/prometheus/prometheus.yml \
          --storage.tsdb.path /var/lib/prometheus/ \
          --web.console.templates=/etc/prometheus/consoles \
          --web.console.libraries=/etc/prometheus/console_libraries
      [Install]
      WantedBy=multi-user.target

  - path: /etc/systemd/system/node_exporter.service
    content: |
      [Unit]
      Description=Node Exporter
      Wants=network-online.target
      After=network-online.target
      [Service]
      User=node_exporter
      Group=node_exporter
      Type=simple
      ExecStart=/usr/local/bin/node_exporter
      [Install]
      WantedBy=multi-user.target

  - path: /etc/systemd/system/minecraft-exporter.service
    content: |
      [Unit]
      Description=Minecraft Exporter
      Wants=network-online.target
      After=network-online.target
      [Service]
      User=minecraft_exporter
      Group=minecraft_exporter
      Type=simple
      ExecStart=/usr/local/bin/minecraft-exporter \
          --mc.rcon-password=test
      [Install]
      WantedBy=multi-user.target

  - path: /etc/systemd/system/quilt.service
    content: |
      [Unit]
      Description=The Quilt Project
      Documentation=https://quiltmc.org/
      DefaultDependencies=no
      After=network.target
      [Service]
      WorkingDirectory=/quilt
      Type=simple
      ExecStart=/usr/bin/java -Xmx4G -Xms4G -jar server.jar nogui
      Restart=on-failure
      RestartSec=5
      [Install]
      WantedBy=multi-user.target

  - path: /etc/fail2ban/jail.local
    content: |
      [sshd]
      port = 22
      enabled = true
      maxretry = 3
      bantime = 1000
      ignoreip = 

  - path: /run/cloud-init.bash
    content: |
      set -Cefuxo pipefail

      arch=$(dpkg --print-architecture)

      etc=/etc
      lib=/var/lib
      local=/usr/local bin=$local/bin src=$local/src

      declare -A versions=(
        [prometheus]=2.36.1
        [minecraft-exporter]=0.11.2
        [node_exporter]=1.3.1
        [quilt-installer]=latest
      )

      release() {
        echo "for attr in \${!$1_release[@]}; do declare \$attr=\${$!_release[\$attr]}; done"
      }
      
      make_github_release() { . <(release github)
        release[dir]=$name${delim--}$version.linux-$arch
      }

      download_github_release() { . <(github_release)
        local url=https://github.com/$owner/$repo/releases/download/v$version/$dir.tar.gz

        if [ ${mkdir-no} = yes ]; then
          local src=$src/$name
          mkdir -p $dir
        fi

        curl -LSfs $url | tar xz -C $src
      }

      download_quilt_release() {
        url=https://maven.quiltmc.org/repository/release/org/quiltmc/$name/latest/quilt-installer-latest.jar

        curl -sLSf $url > /quilt/server.jar
        echo "eula=true" > /minecraft/eula.txt
        mv /tmp/server.properties /minecraft/server.properties
        chmod a+rwx /minecraft

      }

      install_from_source() {
        for entity in ${entities[@]}
        do
          cp -r $src/${release[name]}/$entity $dir
          chown -R ${unit[owner]}:${unit[group]} $dir/$entity
        done
      }

      make_dirs() {
        for dir in ${dirs[@]}; do
          mkdir $dir
          chown ${unit[owner]}:${unit[group]} $dir
        done
      }

      handle_systemctl() {
        systemctl daemon-reload
        systemctl start $name
        systemctl enable $name
      }

      configure_iptables() {
        iptables -I INPUT -j ACCEPT

        # iptables -A INPUT -p tcp -m state --state NEW --dport 25555 -j ACCEPT
        # iptables-save
        # dpkg-reconfigure iptables-persistent

        # iptables -P INPUT DROP
        # iptables -P OUTPUT DROP
        # iptables -P FORWARD DROP
      }


      name=prometheus version=${versions[$name]}

      declare -A github_release=([owner]=$name [repo]=$name [version]=$version)
      download_github_release

      declare -A dirs=([etc]=/etc/$name [lib]=/var/lib/$name)
      make_dirs

      entities=${programs[@]} dir=$bin install_from_source
      entities=${configs[@]} dir=${dirs[etc]} install_from_source

      declare -A unit=([owner]=$name [group]=$name [name]=$name)
      declare -a programs=($name promtool)
      declare -a configs=(consoles console_libraries $name.yml)
      declare -a exporters=(node minecraft)

      name=${unit[name]} handle_systemctl


      name=node_exporter version=${versions[$name]}

      declare -A release=([owner]=prometheus [repo]=$name [version]=$version)
      declare -A unit=([owner]=$name [group]=$name [name]=$name)
      declare -a programs=($name)

      download_github_release
      entities=${programs[@]} dir=$bin install_from_source
      name=${unit[name]} handle_systemctl


      name=minecraft-exporter version=${versions[$name]}

      declare -A release=([owner]=dirien [repo]=minecraft-prometheus-exporter [version]=$version)
      declare -A unit=([owner]=$name [group]=$name [name]=$name)
      declare -a programs=($name)

      mkdir=yes delim=_ download_github_release
      entities=${programs[@]} dir=$bin install_from_source
      name=${unit[name]} handle_systemctl


      name=quilt-installer version=${versions[$name]} 

      declare -A release([owner]=quiltmc [repo]=$name [version]=$version)
      declare -A unit=([owner]=quiltmc [name]=$name)
      delcare dirs=(/quilt)

      make_dirs
      download_quilt_release
      handle_systemctl
      

      sed -i 's/#Port 22/Port 22/g' /etc/ssh/sshd_config
      service sshd restart


      systemctl restart fail2ban

runcmd:
  - [ /bin/bash, /run/cloud-init.bash ]
